// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/presentation/provider/hptv/hptv_detail_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i6;
import 'package:ditonton/domain/entities/hptv/hptv.dart' as _i9;
import 'package:ditonton/domain/entities/hptv/hptv_detail.dart' as _i7;
import 'package:ditonton/domain/repositories/hptv_repository.dart' as _i2;
import 'package:ditonton/domain/usecases/hptv/get_hptv_detail.dart' as _i4;
import 'package:ditonton/domain/usecases/hptv/get_hptv_recomendations.dart'
    as _i8;
import 'package:ditonton/domain/usecases/hptv/get_watchlist_status_hptv.dart'
    as _i10;
import 'package:ditonton/domain/usecases/hptv/remove_watchlist_hptv.dart'
    as _i12;
import 'package:ditonton/domain/usecases/hptv/save_watchlist_hptv.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeHptvRepository_0 extends _i1.Fake implements _i2.HptvRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetHptvDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetHptvDetail extends _i1.Mock implements _i4.GetHptvDetail {
  MockGetHptvDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HptvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeHptvRepository_0()) as _i2.HptvRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.HptvDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i6.Failure, _i7.HptvDetail>>.value(
              _FakeEither_1<_i6.Failure, _i7.HptvDetail>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i7.HptvDetail>>);
}

/// A class which mocks [GetHptvRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetHptvRecommendations extends _i1.Mock
    implements _i8.GetHptvRecommendations {
  MockGetHptvRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HptvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeHptvRepository_0()) as _i2.HptvRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.Hptv>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i6.Failure, List<_i9.Hptv>>>.value(
              _FakeEither_1<_i6.Failure, List<_i9.Hptv>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i9.Hptv>>>);
}

/// A class which mocks [GetWatchListStatusHptv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusHptv extends _i1.Mock
    implements _i10.GetWatchListStatusHptv {
  MockGetWatchListStatusHptv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HptvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeHptvRepository_0()) as _i2.HptvRepository);
  @override
  _i5.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [SaveWatchlistHptv].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistHptv extends _i1.Mock implements _i11.SaveWatchlistHptv {
  MockSaveWatchlistHptv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HptvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeHptvRepository_0()) as _i2.HptvRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i7.HptvDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistHptv].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistHptv extends _i1.Mock
    implements _i12.RemoveWatchlistHptv {
  MockRemoveWatchlistHptv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HptvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeHptvRepository_0()) as _i2.HptvRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i7.HptvDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
}
