// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/presentation/provider/hptv/hptv_list_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i6;
import 'package:ditonton/domain/entities/hptv/hptv.dart' as _i7;
import 'package:ditonton/domain/repositories/hptv_repository.dart' as _i2;
import 'package:ditonton/domain/usecases/hptv/get_now_playing_hptv.dart' as _i4;
import 'package:ditonton/domain/usecases/hptv/get_popular_hptv.dart' as _i8;
import 'package:ditonton/domain/usecases/hptv/get_top_rated_hptv.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeHptvRepository_0 extends _i1.Fake implements _i2.HptvRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetNowPlayingHptv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingHptv extends _i1.Mock implements _i4.GetNowPlayingHptv {
  MockGetNowPlayingHptv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HptvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeHptvRepository_0()) as _i2.HptvRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Hptv>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i6.Failure, List<_i7.Hptv>>>.value(
              _FakeEither_1<_i6.Failure, List<_i7.Hptv>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i7.Hptv>>>);
}

/// A class which mocks [GetPopularHptv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularHptv extends _i1.Mock implements _i8.GetPopularHptv {
  MockGetPopularHptv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HptvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeHptvRepository_0()) as _i2.HptvRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Hptv>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i6.Failure, List<_i7.Hptv>>>.value(
              _FakeEither_1<_i6.Failure, List<_i7.Hptv>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i7.Hptv>>>);
}

/// A class which mocks [GetTopRatedHptv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedHptv extends _i1.Mock implements _i9.GetTopRatedHptv {
  MockGetTopRatedHptv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HptvRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeHptvRepository_0()) as _i2.HptvRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Hptv>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i6.Failure, List<_i7.Hptv>>>.value(
              _FakeEither_1<_i6.Failure, List<_i7.Hptv>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i7.Hptv>>>);
}
