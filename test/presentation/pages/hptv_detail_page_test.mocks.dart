// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/presentation/pages/hptv_detail_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:ditonton/common/state_enum.dart' as _i9;
import 'package:ditonton/domain/entities/hptv/hptv.dart' as _i10;
import 'package:ditonton/domain/entities/hptv/hptv_detail.dart' as _i7;
import 'package:ditonton/domain/usecases/hptv/get_hptv_detail.dart' as _i2;
import 'package:ditonton/domain/usecases/hptv/get_hptv_recomendations.dart'
    as _i3;
import 'package:ditonton/domain/usecases/hptv/get_watchlist_status_hptv.dart'
    as _i4;
import 'package:ditonton/domain/usecases/hptv/remove_watchlist_hptv.dart'
    as _i6;
import 'package:ditonton/domain/usecases/hptv/save_watchlist_hptv.dart' as _i5;
import 'package:ditonton/presentation/provider/hptv/hptv_detail_notifier.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetHptvDetail_0 extends _i1.Fake implements _i2.GetHptvDetail {}

class _FakeGetHptvRecommendations_1 extends _i1.Fake
    implements _i3.GetHptvRecommendations {}

class _FakeGetWatchListStatusHptv_2 extends _i1.Fake
    implements _i4.GetWatchListStatusHptv {}

class _FakeSaveWatchlistHptv_3 extends _i1.Fake
    implements _i5.SaveWatchlistHptv {}

class _FakeRemoveWatchlistHptv_4 extends _i1.Fake
    implements _i6.RemoveWatchlistHptv {}

class _FakeHptvDetail_5 extends _i1.Fake implements _i7.HptvDetail {}

/// A class which mocks [HptvDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockHptvDetailNotifier extends _i1.Mock
    implements _i8.HptvDetailNotifier {
  MockHptvDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetHptvDetail get getHptvDetail =>
      (super.noSuchMethod(Invocation.getter(#getHptvDetail),
          returnValue: _FakeGetHptvDetail_0()) as _i2.GetHptvDetail);
  @override
  _i3.GetHptvRecommendations get getHptvRecommendations =>
      (super.noSuchMethod(Invocation.getter(#getHptvRecommendations),
              returnValue: _FakeGetHptvRecommendations_1())
          as _i3.GetHptvRecommendations);
  @override
  _i4.GetWatchListStatusHptv get getWatchListStatusHptv =>
      (super.noSuchMethod(Invocation.getter(#getWatchListStatusHptv),
              returnValue: _FakeGetWatchListStatusHptv_2())
          as _i4.GetWatchListStatusHptv);
  @override
  _i5.SaveWatchlistHptv get saveWatchlistHptv =>
      (super.noSuchMethod(Invocation.getter(#saveWatchlistHptv),
          returnValue: _FakeSaveWatchlistHptv_3()) as _i5.SaveWatchlistHptv);
  @override
  _i6.RemoveWatchlistHptv get removeWatchlistHptv => (super.noSuchMethod(
      Invocation.getter(#removeWatchlistHptv),
      returnValue: _FakeRemoveWatchlistHptv_4()) as _i6.RemoveWatchlistHptv);
  @override
  _i7.HptvDetail get tv => (super.noSuchMethod(Invocation.getter(#tv),
      returnValue: _FakeHptvDetail_5()) as _i7.HptvDetail);
  @override
  _i9.RequestState get tvState =>
      (super.noSuchMethod(Invocation.getter(#tvState),
          returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  List<_i10.Hptv> get tvRecommendations =>
      (super.noSuchMethod(Invocation.getter(#tvRecommendations),
          returnValue: <_i10.Hptv>[]) as List<_i10.Hptv>);
  @override
  _i9.RequestState get recommendationTvState =>
      (super.noSuchMethod(Invocation.getter(#recommendationTvState),
          returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get isAddedToWatchlistTv =>
      (super.noSuchMethod(Invocation.getter(#isAddedToWatchlistTv),
          returnValue: false) as bool);
  @override
  String get watchlistMessageTv => (super
          .noSuchMethod(Invocation.getter(#watchlistMessageTv), returnValue: '')
      as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i11.Future<void> fetchTvDetail(int? id) => (super.noSuchMethod(
      Invocation.method(#fetchTvDetail, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  _i11.Future<void> addWatchlistTv(_i7.HptvDetail? tv) => (super.noSuchMethod(
      Invocation.method(#addWatchlistTv, [tv]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  _i11.Future<void> removeFromWatchlistTv(_i7.HptvDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeFromWatchlistTv, [tv]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> loadWatchlistStatusTv(int? id) => (super.noSuchMethod(
      Invocation.method(#loadWatchlistStatusTv, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
